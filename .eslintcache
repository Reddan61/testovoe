[{"F:\\testovoe\\my-app\\src\\index.js":"1","F:\\testovoe\\my-app\\src\\App.js":"2","F:\\testovoe\\my-app\\src\\reportWebVitals.js":"3","F:\\testovoe\\my-app\\src\\components\\header\\Header.js":"4","F:\\testovoe\\my-app\\src\\API\\API.js":"5","F:\\testovoe\\my-app\\src\\config\\config.js":"6","F:\\testovoe\\my-app\\src\\redux\\store.js":"7","F:\\testovoe\\my-app\\src\\components\\pagination\\Pagination.js":"8","F:\\testovoe\\my-app\\src\\components\\movies\\Movies.js":"9","F:\\testovoe\\my-app\\src\\components\\movies\\movieItem\\Movie.js":"10","F:\\testovoe\\my-app\\src\\redux\\movieReducer.js":"11","F:\\testovoe\\my-app\\src\\components\\movieDetails\\MovieDetails.js":"12","F:\\testovoe\\my-app\\src\\components\\movieDetails\\MovieDetailsContainer.js":"13","F:\\testovoe\\my-app\\src\\redux\\movieDetailsReducer.js":"14","F:\\testovoe\\my-app\\src\\components\\movies\\cover\\Cover.js":"15","F:\\testovoe\\my-app\\src\\redux\\errorReducer.js":"16","F:\\testovoe\\my-app\\src\\components\\Error\\Error.js":"17"},{"size":742,"mtime":1610990195858,"results":"18","hashOfConfig":"19"},{"size":1791,"mtime":1611408732986,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2198,"mtime":1611168146086,"results":"22","hashOfConfig":"19"},{"size":899,"mtime":1611407998361,"results":"23","hashOfConfig":"19"},{"size":75,"mtime":1611409506772,"results":"24","hashOfConfig":"19"},{"size":686,"mtime":1611407069455,"results":"25","hashOfConfig":"19"},{"size":2740,"mtime":1611156048072,"results":"26","hashOfConfig":"19"},{"size":3190,"mtime":1611402642415,"results":"27","hashOfConfig":"19"},{"size":1171,"mtime":1611334234650,"results":"28","hashOfConfig":"19"},{"size":4982,"mtime":1611408009901,"results":"29","hashOfConfig":"19"},{"size":4284,"mtime":1611335546914,"results":"30","hashOfConfig":"19"},{"size":1188,"mtime":1611396610748,"results":"31","hashOfConfig":"19"},{"size":6166,"mtime":1611408343790,"results":"32","hashOfConfig":"19"},{"size":3245,"mtime":1611408239835,"results":"33","hashOfConfig":"19"},{"size":919,"mtime":1611407644446,"results":"34","hashOfConfig":"19"},{"size":561,"mtime":1611409273924,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jdk9kh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\testovoe\\my-app\\src\\index.js",[],["74","75"],"F:\\testovoe\\my-app\\src\\App.js",[],"F:\\testovoe\\my-app\\src\\reportWebVitals.js",[],"F:\\testovoe\\my-app\\src\\components\\header\\Header.js",[],"F:\\testovoe\\my-app\\src\\API\\API.js",[],"F:\\testovoe\\my-app\\src\\config\\config.js",[],"F:\\testovoe\\my-app\\src\\redux\\store.js",["76"],"F:\\testovoe\\my-app\\src\\components\\pagination\\Pagination.js",[],"F:\\testovoe\\my-app\\src\\components\\movies\\Movies.js",["77","78"],"import React, {useEffect, useState} from 'react';\r\nimport \"./movies.css\";\r\nimport Movie from \"./movieItem/Movie\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addMoviesThunk, FilterByNameThunk, FilterByYearThunk} from \"../../redux/movieReducer\";\r\nimport Pagination from \"../pagination/Pagination\";\r\n\r\n\r\nconst Movies = (props) => {\r\n    const dispatch = useDispatch();\r\n    const moviesGrid = useSelector(state => state.moviesPage.moviesGrid);\r\n    const portionSize = 5;\r\n    const pageCount = useSelector(state => state.moviesPage.totalCountPages);\r\n    const pageNumber = useSelector(state => state.moviesPage.pageNumber);\r\n    const isSearching = useSelector(state => state.moviesPage.isSearching);\r\n    const [isFilteredName,ChangeFilterName] = useState(false);\r\n    const [isFilteredDate,ChangeFilterDate] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        if (!isSearching) {\r\n            await dispatch(addMoviesThunk(pageNumber));\r\n            props.ChangeGettedMovies(true);\r\n        }\r\n        props.setLoading(false);\r\n    },[isSearching]);\r\n\r\n    function changePage(e) {\r\n        if (!e.target.classList.contains(`movies__span_active`)) {\r\n            let spans = document.querySelectorAll(\".movies__span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                spans[i].classList.remove(`${e.target.className}_active`)\r\n            }\r\n            e.target.classList.toggle(`${e.target.className}_active`);\r\n        }\r\n    }\r\n\r\n    function nameFilter() {\r\n        ChangeFilterName(!isFilteredName);\r\n        dispatch(FilterByNameThunk(!isFilteredName));\r\n    }\r\n    function dateFilter() {\r\n        ChangeFilterDate(!isFilteredDate);\r\n        dispatch(FilterByYearThunk(!isFilteredDate));\r\n    }\r\n\r\n    return <div className={\"movies\"}>\r\n        <div className={\"movies__body\"}>\r\n            <div className={\"movies__title\"}>\r\n                <div className={\"movies__sample\"}>\r\n                    <span className={\"movies__span movies__span_active\"} onClick={(e) => changePage(e)}>Films</span>\r\n                    <span className={\"movies__span\"} onClick={(e) => changePage(e)}>TV series</span>\r\n                </div>\r\n                <div className={\"movies__filter\"}>\r\n                    <span onClick={() => nameFilter()}>Name</span>\r\n                    <span onClick={() => dateFilter()}>Date</span>\r\n                </div>\r\n            </div>\r\n            {props.isLoading ? <div>Loading</div>\r\n                :\r\n                <div className={\"movies__items\"}>\r\n                    {moviesGrid.map((el, index) => <div className={\"movies__row\"} key={index}>\r\n                            {el.map(el => <Movie key={el.id} movie={el}/>)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n            <div className={\"movies__pagination\"}>\r\n                {props.isLoading ? <div></div>\r\n                    :\r\n                    <Pagination pageCount={pageCount} portionSize={portionSize} pageNumber={pageNumber}\r\n                                setLoading={props.setLoading}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Movies;","F:\\testovoe\\my-app\\src\\components\\movies\\movieItem\\Movie.js",["79"],"import React, {useState, useRef} from \"react\";\r\nimport \"./movie.css\";\r\nimport noImage from \"../../../icons/noimage.jpg\"\r\nimport {withRouter} from \"react-router\";\r\nimport Cover from \"../cover/Cover\";\r\n\r\nconst Movie = (props) => {\r\n\r\n    const movie = props.movie;\r\n    let ref = useRef(null);\r\n\r\n    function onHover() {\r\n        if (ref.current !== null) {\r\n            ref.current.classList.add('cover_active');\r\n        }\r\n    }\r\n\r\n    function onOut() {\r\n        if (ref.current !== null) {\r\n            ref.current.classList.remove('cover_active');\r\n        }\r\n\r\n    }\r\n\r\n    return <div className={\"movie\"}>\r\n        <div className={\"movie__body\"}\r\n             onMouseOver={(e) => onHover()}\r\n             onMouseOut={(e) => onOut()}>\r\n            <Cover movie={props.movie} ref={ref}/>\r\n            <img src={movie.poster_path === null ? noImage : `https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                 alt=\"movieImage\" width={\"285\"} height={\"428\"}\r\n            />\r\n            <div className={\"movie__title\"}>\r\n                <span>{movie.title}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default withRouter(Movie);","F:\\testovoe\\my-app\\src\\redux\\movieReducer.js",["80"],"F:\\testovoe\\my-app\\src\\components\\movieDetails\\MovieDetails.js",[],"F:\\testovoe\\my-app\\src\\components\\movieDetails\\MovieDetailsContainer.js",["81","82"],"import React, {useEffect,useState} from \"react\";\r\nimport {withRouter} from \"react-router\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMovieByIdThunk, setFavoriteThunk, setRatingThunk} from \"../../redux/movieDetailsReducer\";\r\n\r\n\r\nconst MovieDetailsContainer = (props) => {\r\n    let movie = useSelector(state => state.detailsPage.movie);\r\n    let credits = useSelector(state => state.detailsPage.credits);\r\n    const [isLoading,changeLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n    let id = props.match.params.id;\r\n    useEffect(async () => {\r\n        await dispatch(getMovieByIdThunk(id));\r\n        changeLoading(false);\r\n    },[]);\r\n\r\n    async function changeRating (rating) {\r\n        await dispatch(setRatingThunk(id,rating));\r\n    }\r\n\r\n    async function changeIsFavorite () {\r\n        await dispatch(setFavoriteThunk(id));\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <></>\r\n    }\r\n    return <>\r\n        <MovieDetails movie = {movie} credits = {credits} changeRating = {changeRating} changeIsFavorite = {changeIsFavorite}/>\r\n    </>\r\n};\r\n\r\n\r\nexport default withRouter(MovieDetailsContainer);","F:\\testovoe\\my-app\\src\\redux\\movieDetailsReducer.js",["83","84","85","86","87","88","89"],"F:\\testovoe\\my-app\\src\\components\\movies\\cover\\Cover.js",["90","91"],"F:\\testovoe\\my-app\\src\\redux\\errorReducer.js",[],"F:\\testovoe\\my-app\\src\\components\\Error\\Error.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":56,"nodeType":"98","messageId":"99","endLine":1,"endColumn":62},{"ruleId":"100","severity":1,"message":"101","line":19,"column":15,"nodeType":"102","endLine":25,"endColumn":6},{"ruleId":"100","severity":1,"message":"103","line":25,"column":7,"nodeType":"104","endLine":25,"endColumn":20,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},{"ruleId":"96","severity":1,"message":"107","line":2,"column":24,"nodeType":"98","messageId":"99","endLine":2,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":14,"column":15,"nodeType":"102","endLine":17,"endColumn":6},{"ruleId":"100","severity":1,"message":"108","line":17,"column":7,"nodeType":"104","endLine":17,"endColumn":9,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":56,"column":34,"nodeType":"102","messageId":"112","endLine":56,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":70,"column":28,"nodeType":"115","messageId":"116","endLine":70,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":86,"column":28,"nodeType":"115","messageId":"116","endLine":86,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":129,"column":61,"nodeType":"115","messageId":"116","endLine":129,"endColumn":63},{"ruleId":"113","severity":1,"message":"114","line":132,"column":39,"nodeType":"115","messageId":"116","endLine":132,"endColumn":41},{"ruleId":"113","severity":1,"message":"114","line":166,"column":61,"nodeType":"115","messageId":"116","endLine":166,"endColumn":63},{"ruleId":"113","severity":1,"message":"114","line":169,"column":39,"nodeType":"115","messageId":"116","endLine":169,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":15,"column":15,"nodeType":"102","endLine":27,"endColumn":6},{"ruleId":"100","severity":1,"message":"117","line":27,"column":8,"nodeType":"104","endLine":27,"endColumn":10,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Action' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'pageNumber', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["121"],"'useState' is defined but never used.","'errorCatch' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["122"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'movie'. Either include them or remove the dependency array. You can also do a functional update 'ChangeMovie(m => ...)' if you only need 'movie' in the 'ChangeMovie' call.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [dispatch, isSearching, pageNumber, props]",{"range":"130","text":"131"},"Update the dependencies array to be: [dispatch, id]",{"range":"132","text":"133"},"Update the dependencies array to be: [dispatch, id, movie]",{"range":"134","text":"135"},[1063,1076],"[dispatch, isSearching, pageNumber, props]",[716,718],"[dispatch, id]",[1166,1168],"[dispatch, id, movie]"]